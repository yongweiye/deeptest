# _*_ coding : utf-8 _*_
__author__ = "Jason"

#查看关键字
import keyword
print(keyword.kwlist)

#最基础的用法：直接打印
print("直接打印")

#用户交互输入，并打印
data = input("请输入您想输入的：")
print("您输入了：%s"%data)
print("您输入了：",data)#和上一行的输出相比，中间多了一个分隔符（空格）。上一行输出是一个整体，这一行输出的是两个数据。
print(type(data))#无论用户输入的是什么数据，该数据类型永远都是String类型。

#分割数据并输出
data_list = data.split('c')#以c为分隔符，将用户输入的data数据分割成多个数据并组成list
print(data_list)

#不换行输出
#在python3中，输出默认是换行的，如果想不换行输出，须带上end=''
for x in range(0,10):
    print(x,end='')#打印结果为：0123456789，且会接上下一次打印

#拼接字符串打印
x = "hello"
y = "python"
print(x+y)#打印结果：hellopython

#总结
'''
看看《Python基础编程》中对格式化输出的总结：
(1). %字符：标记转换说明符的开始
(2). 转换标志：-表示左对齐；+表示在转换值之前要加上正负号；“”（空白字符）表示正数之前保留空格；0表示转换值若位数不够则用0填充
(3). 最小字段宽度：转换后的字符串至少应该具有该值指定的宽度。如果是*，则宽度会从值元组中读出。
(4). 点(.)后跟精度值：如果转换的是实数，精度值就表示出现在小数点后的位数。如果转换的是字符串，那么该数字就表示最大字段宽度。如果是*，那么精度将从元组中读出
(5).字符串格式化转换类型

转换类型        含义
d,i             带符号的十进制整数
o               不带符号的八进制
u               不带符号的十进制
x               不带符号的十六进制（小写）
X               不带符号的十六进制（大写）
e               科学计数法表示的浮点数（小写）
E               科学计数法表示的浮点数（大写）
f,F             十进制浮点数
g               如果指数大于-4或者小于精度值则和e相同，其他情况和f相同
G               如果指数大于-4或者小于精度值则和E相同，其他情况和F相同
C               单字符（接受整数或者单字符字符串）
r               字符串（使用repr转换任意python对象)
s               字符串（使用str转换任意python对象）
'''
'''
再附带一个算数函数pow()
pow()函数有三个参数，第一个为基数，第二个为幂数，第三个为取余的除数
pow(3,3,4)的意思是：3的3次方，再对4取余，即3*3*3=27，27%4=3，最后结果为3
'''
print(pow(3,3,4))#结果为3
'''
部分函数：
abs(number)             返回数字的绝对值
cmath.sqrt(number)      返回平方根，也可以应用于负数
float(object)           把字符串和数字转换为浮点数
help()                  提供交互式帮助
input(prompt)           获取用户输入
int(object)             把字符串和数字转换为整数
math.ceil(number)       返回数的上入整数，返回值的类型为浮点数
math.floor(number)      返回数的下舍整数，返回值的类型为浮点数
math.sqrt(number)       返回平方根不适用于负数
pow(x,y[.z])            返回X的y次幂（有z则对z取模）
repr(object)            返回值的字符串标示形式
round(number[.ndigits]) 根据给定的精度对数字进行四舍五入
str(object)             把值转换为字符串
'''